{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acer\\\\Desktop\\\\loginpage\\\\src\\\\views\\\\login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    emailOrUsername: \"\",\n    password: \"\"\n  });\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  // Handle form input changes\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!formData.emailOrUsername || !formData.password) {\n      setErrorMessage(\"All fields are required.\");\n      return;\n    }\n    try {\n      // Sending login request to the server\n      const response = await axios.post(\"/api/login\", formData);\n      alert(response.data.message); // Handle success\n      setErrorMessage(\"\");\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setErrorMessage(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || \"Invalid login attempt.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"glass-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"emailOrUsername\",\n          placeholder: \"Username or Email\",\n          value: formData.emailOrUsername,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"Password\",\n          value: formData.password,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"vorD1Mdjw/dVQf/RBh/RJ0cxKEg=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Login","_s","formData","setFormData","emailOrUsername","password","errorMessage","setErrorMessage","handleChange","e","target","name","value","handleSubmit","preventDefault","response","post","alert","data","message","err","_err$response","_err$response$data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","_c","$RefreshReg$"],"sources":["C:/Users/acer/Desktop/loginpage/src/views/login.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"../services/api\";\r\n\r\nconst Login = () => {\r\n  const [formData, setFormData] = useState({ emailOrUsername: \"\", password: \"\" });\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  // Handle form input changes\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  // Handle form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!formData.emailOrUsername || !formData.password) {\r\n      setErrorMessage(\"All fields are required.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Sending login request to the server\r\n      const response = await axios.post(\"/api/login\", formData);\r\n      alert(response.data.message); // Handle success\r\n      setErrorMessage(\"\");\r\n    } catch (err) {\r\n      setErrorMessage(err.response?.data?.message || \"Invalid login attempt.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"glass-container\">\r\n        <div className=\"login-box\">\r\n        <h1>Login</h1>\r\n        <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"emailOrUsername\"\r\n          placeholder=\"Username or Email\"\r\n          value={formData.emailOrUsername}\r\n          onChange={handleChange}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          placeholder=\"Password\"\r\n          value={formData.password}\r\n          onChange={handleChange}\r\n        />\r\n        {errorMessage && <p className=\"error\">{errorMessage}</p>}\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n        </div>\r\n      \r\n    \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}