{"ast":null,"code":"import axios from \"axios\";\n\n// Create an Axios instance with a base configuration\nconst api = axios.create({\n  baseURL: \"http://localhost:5000\",\n  // Replace with your backend URL\n  timeout: 5000,\n  // Request timeout in milliseconds\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\n\n// Example: Handle requests with interceptors if needed\napi.interceptors.response.use(response => response, error => {\n  // Handle errors (e.g., unauthorized access, server errors)\n  if (error.response && error.response.status === 401) {\n    alert(\"Unauthorized. Please log in again.\");\n  }\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","timeout","headers","interceptors","response","use","error","status","alert","Promise","reject"],"sources":["C:/Users/acer/Desktop/loginpage/src/services/api.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\n// Create an Axios instance with a base configuration\r\nconst api = axios.create({\r\n  baseURL: \"http://localhost:5000\", // Replace with your backend URL\r\n  timeout: 5000, // Request timeout in milliseconds\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\n// Example: Handle requests with interceptors if needed\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    // Handle errors (e.g., unauthorized access, server errors)\r\n    if (error.response && error.response.status === 401) {\r\n      alert(\"Unauthorized. Please log in again.\");\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default api;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE,uBAAuB;EAAE;EAClCC,OAAO,EAAE,IAAI;EAAE;EACfC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAJ,GAAG,CAACK,YAAY,CAACC,QAAQ,CAACC,GAAG,CAC1BD,QAAQ,IAAKA,QAAQ,EACrBE,KAAK,IAAK;EACT;EACA,IAAIA,KAAK,CAACF,QAAQ,IAAIE,KAAK,CAACF,QAAQ,CAACG,MAAM,KAAK,GAAG,EAAE;IACnDC,KAAK,CAAC,oCAAoC,CAAC;EAC7C;EACA,OAAOC,OAAO,CAACC,MAAM,CAACJ,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAeR,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}